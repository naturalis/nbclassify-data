---
# This is an example configurations file for trainer.py and classify.py.

# The directory hierarchy describes how images are organized on the local
# hard drive. Each item in the list corresponds to a rank name in the database.
# The directory name will be stored as the taxonomic name for that rank.
# If the directory name is "None", that rank will not be saved in the database.
# Directory levels can be ignored by setting the corresponding rank in the
# directory hierarchy to "__ignore__".
directory_hierarchy:
    - genus
    - section
    - species

# Describe training data format.
data: &data
    # Prefix of classification columns. When generating training data, this
    # prefix is extended with a number.
    dependent_prefix: "OUT:"

    # Sets how the extracted features should be normalized. Set this according
    # to the activation functions used for the neurons during training.
    normalize:
        # Scale features to lie between a given minimum and maximum value.
        min_max: [-1, 1]

# Preprocessing steps to perform on images before features are extracted.
preprocess: &preprocess
    # Limit the maximum perimeter for input images (optional). The input
    # image is scaled down if the image perimeter, calculated as width +
    # height, exeeds this value. The input images on disk stay unmodified.
    maximum_perimeter: 1000

    # Perform color enhancement on images.
    #color_enhancement:
        # A hue preserving linear transformation with maximum possible contrast.
        #naik_murthy_linear: {}

    # Perform segmentation on the image, where the background is removed.
    segmentation:
        grabcut:
            # The number of segmentation iterations. Default is 5.
            iters: 5
            # The margin of the region of interest from the edges of the image.
            # Default is 1.
            margin: 1
            # Where masked images are saved (optional).
            output_folder: /tmp/masked/

# Features to be extracted from the images.
features: &features
    # Describes the BGR color frequencies along horizontal and vertical axis.
    color_bgr_means:
        # Each axis is divided into equal size bins. The color frequencies for
        # each bin are computed.
        bins: 20

# Parameters for training artificial neural networks.
ann: &ann
    # 'ordinary' or 'cascade' training.
    train_type: ordinary
    # Desired error. Defaults to 0.00001.
    desired_error: 0.00001
    # The training algorithm used for training. Default is TRAIN_RPROP.
    # See http://leenissen.dk/fann/html/files/fann_data-h.html#fann_train_enum
    training_algorithm: TRAIN_RPROP
    # The activation function for the hidden layers. Default is SIGMOID_STEPWISE.
    # See http://leenissen.dk/fann/html/files/fann_data-h.html#fann_activationfunc_enum
    activation_function_hidden: SIGMOID_SYMMETRIC
    # The activation function for the output layer. Default is SIGMOID_STEPWISE.
    # See http://leenissen.dk/fann/html/files/fann_data-h.html#fann_activationfunc_enum
    activation_function_output: SIGMOID_SYMMETRIC

    # Ordinary training:

    # Maximum number of epochs. Defaults to 100000.
    epochs: 30000
    # Number of hidden neuron layers. Defaults to 1.
    hidden_layers: 1
    # Number of hidden neurons per hidden layer. Defaults to 8.
    hidden_neurons: 20
    # Learning rate. Defaults to 0.7.
    learning_rate: 0.7
    # Connection rate. Defaults to 1, a fully connected network.
    connection_rate: 1

    # Cascade training:

    # The maximum number of neurons to be added to neural network.
    max_neurons: 100
    # The number of neurons between printing a status report.
    neurons_between_reports: 1
    # List of the different activation functions used by the candidates.
    # See http://leenissen.dk/fann/html/files/fann_cascade-h.html#fann_get_cascade_activation_steepnesses
    cascade_activation_steepnesses: [ 0.25, 0.50, 0.75, 1.00 ]
    # The number of groups of identical candidates which will be used during training.
    # See http://leenissen.dk/fann/html/files/fann_cascade-h.html#fann_set_cascade_num_candidate_groups
    cascade_num_candidate_groups: 2

ann_genus: &ann_genus
    train_type: ordinary
    desired_error: 0.00001
    training_algorithm: TRAIN_RPROP
    activation_function_hidden: SIGMOID_SYMMETRIC
    activation_function_output: SIGMOID_SYMMETRIC
    # Ordinary training:
    epochs: 30000
    hidden_layers: 1
    hidden_neurons: 50
    learning_rate: 0.7
    connection_rate: 1
    # Cascade training:
    max_neurons: 100
    neurons_between_reports: 1
    cascade_activation_steepnesses: [ 0.25, 0.50, 0.75, 1.00 ]
    cascade_num_candidate_groups: 2

# Configurations for classification.
classification:
    # Simplified query for filtering photos with corresponding classification
    # from the database.
    filter:
        where:
            genus: Cypripedium
            section: Arietinum
        class:
            species

    # Define the classification hierarchy from top to bottom.
    hierarchy:
        - name: genus
          data: *data
          preprocess: *preprocess
          features: *features
          ann: *ann_genus
          train_file: genus.tsv
          test_file: genus.tsv
          ann_file: genus.ann
          max_error: 0.01

        - name: section
          data: *data
          preprocess: *preprocess
          features: *features
          ann: *ann
          train_file: __genus__.section.tsv
          test_file: __genus__.section.tsv
          ann_file: __genus__.section.ann
          max_error: 0.01

        - name: species
          data: *data
          preprocess: *preprocess
          features: *features
          ann: *ann
          train_file: __genus__.__section__.species.tsv
          test_file: __genus__.__section__.species.tsv
          ann_file: __genus__.__section__.species.ann
          max_error: 0.01

    # The taxon hierarchy to be used for classification. This must be the same
    # taxon hierarchy used while training the set of artificial neural networks
    # being used for classification. Setting this option allows image
    # classification without the need for a metadata database.
    taxa:
        Cypripedium:
            Acaulia: [acaule]
            Arietinum: [arietinum, plectrochilum]
            Bifolia: [guttatum, yatabeanum]
            Cypripedium: [calceolus, calcicola, farreri, parviflorum,
                shanxiense, tibeticum, yunnanense]
            Enantiopedilum: [fasciculatum]
            Flabellinervia: [formosanum, japonicum]
            Macrantha: [franchetii]
            Obtusipetala: [flavum, reginae]
            Sinopedilum: [bardolphianum, forrestii]
            Subtropica: [subtropicum, wardii]
            Trigonopedia: [fargesii, sichuanense]
        Mexipedium:
            Mexipedium: [xerophyticum]
        Paphiopedilum:
            Barbata: [acmodontum, appletonianum, argus, barbatum, boungainvilleanum,
                bullenianum, callosum, ciliolare, dayanum, fowliei, hennisianum,
                hookerae, javanicum, lawrenceanum, mastersianum, papuanum,
                purpuratum, sangii, schoseri, sukhakulii, superbiens,
                tonsum, urbanianum, venustum, violascens, wardii, wentworthianum]
            Brachypetalum: [bellatulum, concolor, godefroyae, niveum,
                thaianum, wenshanense]
            Cochlopetalum: [glaucophyllum, liemianum, primulinum, victoria-mariae,
                victoria-regina]
            Coryopedilum: [adductum, gigantifolium, glanduliferum, kolopakingii,
                philippinense, randsii, rothschildianum, stonei, supardii,
                wilhelminiae]
            Paphiopedilum: [barbigerum, charlesworthii, druryi, exul,
                fairrieanum, gratrixianum, helenae, henryanum, hirsutissimum,
                insigne, spicerianum, tigrinum, villosum]
            Pardalopetalum: [dianthum, haynaldianum, lowii, parishii]
            Parvisepalum: [armeniacum, delenatii, emersonii, malipoense,
                micranthum, vietnamense]
        Phragmipedium:
            Lorifolia: [boissierianum, hirtzii, longifolium, pearcei,
                vittatum]
            Micropetalum: [andreettae, besseae, fischeri, schlimii]
            Phragmipedium: [caricinum, caudatum, christiansenianum, exstaminodium,
                klotzschianum, lindenii, ritchteri, warscewiczianum]
            Platypetalum: [lindelayanum, sargentianum]
        Selenipedium:
            Selenipedium: [palmifolium]

